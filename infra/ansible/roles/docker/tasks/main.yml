---
- name: Install prerequisites
  apt:
    name: [ca-certificates, curl, gnupg]
    state: present
    update_cache: true

- name: Ensure keyrings dir
  file:
    path: /etc/apt/keyrings
    state: directory
    mode: "0755"

# Качаем ASCII-ключ каждый раз
- name: Download Docker GPG (ASCII)
  get_url:
    url: https://download.docker.com/linux/ubuntu/gpg
    dest: /etc/apt/keyrings/docker.asc
    mode: "0644"

# БЕЗ creates — всегда деарморим и ПЕРЕЗАТИРАЕМ docker.gpg
- name: Convert Docker GPG to dearmored keyring
  command: gpg --dearmor -o /etc/apt/keyrings/docker.gpg /etc/apt/keyrings/docker.asc
  args:
    creates: /etc/apt/keyrings/docker.gpg  # Выполнять только если файла нет
  register: gpg_result
  failed_when:
    - gpg_result.rc != 0
    - "'already exists' not in gpg_result.stderr"
  async: 30
  poll: 5

- name: Ensure readable permissions on keyring
  file:
    path: /etc/apt/keyrings/docker.gpg
    mode: "0644"

# На всякий случай вычислим архитектуру (amd64/arm64)
- name: Set docker apt arch
  set_fact:
    docker_arch: "{{ 'arm64' if ansible_architecture in ['aarch64','arm64'] else 'amd64' }}"

- name: Add Docker apt repository (24.04 'noble' поддерживается)
  apt_repository:
    repo: "deb [arch={{ docker_arch }} signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    filename: docker
    state: present
    update_cache: true

- name: Install Docker CE + plugins
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present
    update_cache: true

- name: Configure daemon.json (лог-лимиты, live-restore)
  copy:
    dest: /etc/docker/daemon.json
    mode: "0644"
    content: |
      {
        "log-driver": "json-file",
        "log-opts": { "max-size": "10m", "max-file": "3" },
        "live-restore": true
      }
  notify: restart docker

- name: Enable & start Docker
  systemd:
    name: docker
    enabled: true
    state: started

- name: Add users to docker group
  user:
    name: "{{ item }}"
    groups: docker
    append: true
  loop: "{{ docker_users | default(['ubuntu']) }}"